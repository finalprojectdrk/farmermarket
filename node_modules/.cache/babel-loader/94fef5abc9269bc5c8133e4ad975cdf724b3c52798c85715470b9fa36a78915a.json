{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sethu\\\\downloads\\\\project\\\\src\\\\pages\\\\SupplyChain.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SupplyChain = () => {\n  _s();\n  // Dummy supply chain data (Replace with API or database)\n  const initialOrders = [{\n    id: 1,\n    crop: \"Wheat\",\n    buyer: \"AgroMart Pvt Ltd\",\n    status: \"Pending\",\n    transport: \"Truck - TN 45 AB 6789\"\n  }, {\n    id: 2,\n    crop: \"Rice\",\n    buyer: \"Green Farmers Co.\",\n    status: \"In Transit\",\n    transport: \"Van - TN 22 XY 4321\"\n  }, {\n    id: 3,\n    crop: \"Maize\",\n    buyer: \"Local Retailer\",\n    status: \"Delivered\",\n    transport: \"Truck - TN 10 ZZ 9876\"\n  }];\n  const [orders, setOrders] = useState(initialOrders);\n\n  // Simulate real-time updates (Change status randomly every 10s)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setOrders(prevOrders => prevOrders.map(order => {\n        if (order.status === \"Pending\") return {\n          ...order,\n          status: \"In Transit\"\n        };\n        if (order.status === \"In Transit\") return {\n          ...order,\n          status: \"Delivered\"\n        };\n        return order;\n      }));\n    }, 10000); // Update every 10 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDE9C Supply Chain Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Buyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Transport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.crop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.buyer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: styles.status[order.status],\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.transport\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n// âœ… Inline CSS for Styling\n_s(SupplyChain, \"YNTG4sMECWlcq3NiXOE4B9cF568=\");\n_c = SupplyChain;\nconst styles = {\n  container: {\n    padding: \"20px\",\n    background: \"#f9f9f9\",\n    borderRadius: \"8px\",\n    boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.1)\",\n    textAlign: \"center\"\n  },\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n    marginTop: \"10px\"\n  },\n  status: {\n    Pending: {\n      color: \"red\",\n      fontWeight: \"bold\"\n    },\n    \"In Transit\": {\n      color: \"orange\",\n      fontWeight: \"bold\"\n    },\n    Delivered: {\n      color: \"green\",\n      fontWeight: \"bold\"\n    }\n  }\n};\nexport default SupplyChain;\nvar _c;\n$RefreshReg$(_c, \"SupplyChain\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SupplyChain","_s","initialOrders","id","crop","buyer","status","transport","orders","setOrders","interval","setInterval","prevOrders","map","order","clearInterval","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","table","_c","padding","background","borderRadius","boxShadow","textAlign","width","borderCollapse","marginTop","Pending","color","fontWeight","Delivered","$RefreshReg$"],"sources":["C:/Users/sethu/downloads/project/src/pages/SupplyChain.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst SupplyChain = () => {\n  // Dummy supply chain data (Replace with API or database)\n  const initialOrders = [\n    { id: 1, crop: \"Wheat\", buyer: \"AgroMart Pvt Ltd\", status: \"Pending\", transport: \"Truck - TN 45 AB 6789\" },\n    { id: 2, crop: \"Rice\", buyer: \"Green Farmers Co.\", status: \"In Transit\", transport: \"Van - TN 22 XY 4321\" },\n    { id: 3, crop: \"Maize\", buyer: \"Local Retailer\", status: \"Delivered\", transport: \"Truck - TN 10 ZZ 9876\" },\n  ];\n\n  const [orders, setOrders] = useState(initialOrders);\n\n  // Simulate real-time updates (Change status randomly every 10s)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setOrders((prevOrders) =>\n        prevOrders.map((order) => {\n          if (order.status === \"Pending\") return { ...order, status: \"In Transit\" };\n          if (order.status === \"In Transit\") return { ...order, status: \"Delivered\" };\n          return order;\n        })\n      );\n    }, 10000); // Update every 10 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={styles.container}>\n      <h2>ðŸšœ Supply Chain Management</h2>\n      <table style={styles.table}>\n        <thead>\n          <tr>\n            <th>Crop</th>\n            <th>Buyer</th>\n            <th>Status</th>\n            <th>Transport</th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders.map((order) => (\n            <tr key={order.id}>\n              <td>{order.crop}</td>\n              <td>{order.buyer}</td>\n              <td style={styles.status[order.status]}>{order.status}</td>\n              <td>{order.transport}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n// âœ… Inline CSS for Styling\nconst styles = {\n  container: {\n    padding: \"20px\",\n    background: \"#f9f9f9\",\n    borderRadius: \"8px\",\n    boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.1)\",\n    textAlign: \"center\",\n  },\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n    marginTop: \"10px\",\n  },\n  status: {\n    Pending: { color: \"red\", fontWeight: \"bold\" },\n    \"In Transit\": { color: \"orange\", fontWeight: \"bold\" },\n    Delivered: { color: \"green\", fontWeight: \"bold\" },\n  },\n};\n\nexport default SupplyChain;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}